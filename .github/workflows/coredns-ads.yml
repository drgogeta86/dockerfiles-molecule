# Container image name consists of QUAY_USERNAME and workflow name.

on:
  push:
    branches:
      - master

jobs:
  container:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare
        if: steps.prep.outputs.modified != 0
        id: prep
        run: |
          CONTEXT=$(basename "${GITHUB_WORKFLOW}" .yml)
          CONTAINER_IMAGE=quay.io/${{ secrets.QUAY_USERNAME }}/${CONTEXT}
          SHORTREF=${GITHUB_SHA::8}
          TAGS="${CONTAINER_IMAGE}:latest,${CONTAINER_IMAGE}:${SHORTREF}"

          # Set output parameters.
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${CONTAINER_IMAGE}
          echo ::set-output name=file_context::${CONTEXT}

      - name: Set up QEMU
        if: steps.prep.outputs.modified != 0
        uses: docker/setup-qemu-action@master
        with:
          platforms: amd64,arm64,arm

      - name: Set up Docker Buildx
        if: steps.prep.outputs.modified != 0
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to registry
        if: github.event_name != 'pull_request' && steps.prep.outputs.modified != 0
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Build
        if: steps.prep.outputs.modified != 0
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ${{ steps.prep.outputs.file_context }}
          file: ${{ steps.prep.outputs.file_context }}/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm
          push: true
          tags: ${{ steps.prep.outputs.tags }}
